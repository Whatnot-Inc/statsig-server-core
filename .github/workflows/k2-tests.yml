name: '[Kong 2] Tests'

on:
  workflow_dispatch:
    inputs:
      workflow_run_id:
        description: 'The workflow run that contains the artifacts to test'
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  # GH Octokit (Kong App)
  GH_APP_ID: '229901'
  GH_APP_INSTALLATION_ID: '36921303'
  GH_APP_PRIVATE_KEY: ${{ secrets.KONG_APP_KEY_V2 }}

  # Statsig Evaluations Project API Keys
  test_api_key: ${{ secrets.KONG_SERVER_SDK_KEY }}
  test_client_key: ${{ secrets.KONG_CLIENT_SDK_KEY }}

  # Misc
  CARGO_TERM_COLOR: always
  FORCE_COLOR: true
  repo_pat: ${{ secrets.KONG_FINE_GRAINED_REPO_PAT }}

jobs:
  build-kong-host:
    timeout-minutes: 15
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        app: [node, python, java]

    steps:
      - name: Get KONG
        run: git clone https://oauth2:$repo_pat@github.com/statsig-io/kong.git .

      - name: 'Build Docker Image'
        uses: ./.github/actions/build-docker-image
        with:
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_password: ${{ secrets.DOCKERHUB_TOKEN }}
          dockerfile_path: kong-2-electric-boogaloo/src/docker/Dockerfile.${{ matrix.app }}.alpine
          docker_image_tag: statsig/kong-host-${{ matrix.app }}
          context_path: kong-2-electric-boogaloo

  main:
    needs: [build-kong-host]
    timeout-minutes: 15
    runs-on: ubuntu-latest
    defaults:
      run:

    strategy:
      fail-fast: false
      matrix:
        config:
          - app: core-napi
            dockerfile: node

          - app: core-python
            dockerfile: python

    steps:
      - name: Get KONG
        run: git clone https://oauth2:$repo_pat@github.com/statsig-io/kong.git .

      - name: 'Setup pnpm'
        uses: ./.github/actions/setup-pnpm
        with:
          node_version: 20
          pnpm_version: 7.32.4
          working_directory: ./kong-2-electric-boogaloo

      - uses: actions/cache@v4
        with:
          path: ./kong-2-electric-boogaloo/.kong/
          key: kong-cache-${{ matrix.config.app }}
          restore-keys: kong-cache-${{ matrix.config.app }}

      - name: Load Docker Image (App)
        uses: ./.github/actions/load-docker-image
        with:
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_password: ${{ secrets.DOCKERHUB_TOKEN }}
          dockerfile_path: kong-2-electric-boogaloo/src/docker/Dockerfile.${{ matrix.config.dockerfile }}.alpine
          docker_image_tag: statsig/kong-host-${{ matrix.config.dockerfile }}

      - name: Load Docker Image (Scrapi)
        uses: ./.github/actions/load-docker-image
        with:
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_password: ${{ secrets.DOCKERHUB_TOKEN }}
          dockerfile_path: kong-2-electric-boogaloo/src/docker/Dockerfile.node.alpine
          docker_image_tag: statsig/kong-host-node

      - name: Clone SDKs
        working-directory: ./kong-2-electric-boogaloo
        run: ./kong clone-sdks --apps ${{ matrix.config.app }} --verbose

      - name: Download Artifacts
        working-directory: ./kong-2-electric-boogaloo
        run: ./kong download --apps ${{ matrix.config.app }} --verbose --workflow-id ${{ inputs.workflow_run_id }}

      - name: Cache Scrapi Data
        working-directory: ./kong-2-electric-boogaloo
        run: ./kong cache --verbose

      - name: Run Tests
        working-directory: ./kong-2-electric-boogaloo
        run: |
          ./kong test \
            --apps scrapi ${{ matrix.config.app }} \
            --pool-size 1 \
            --verbose \
            --no-build
