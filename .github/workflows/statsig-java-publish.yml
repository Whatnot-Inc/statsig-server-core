name: Statsig Java Publish

on:
  workflow_dispatch:
    inputs:
      workflow_run_id:
        description: 'The StatsigFFI workflow run that built the artifacts to publish'
        required: true

jobs:
  publish:
    runs-on: ubuntu-latest

    env:
      ORG_GRADLE_PROJECT_MAVEN_USERNAME: ${{ secrets.ORG_GRADLE_PROJECT_MAVEN_USERNAME }}
      ORG_GRADLE_PROJECT_MAVEN_PASSWORD: ${{ secrets.ORG_GRADLE_PROJECT_MAVEN_PASSWORD }}
      ORG_GRADLE_PROJECT_SIGNING_KEY_ID: ${{ secrets.ORG_GRADLE_PROJECT_SIGNING_KEY_ID }}
      ORG_GRADLE_PROJECT_SIGNING_KEY: ${{ secrets.ORG_GRADLE_PROJECT_SIGNING_KEY }}
      ORG_GRADLE_PROJECT_SIGNING_PASSWORD: ${{ secrets.ORG_GRADLE_PROJECT_SIGNING_PASSWORD }}

    steps:
    - name: Get Workflow Run Info
      uses: actions/github-script@v7
      with:
        script: |
          const run = await github.rest.actions.getWorkflowRun({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: ${{ github.event.inputs.workflow_run_id }}
          });

          console.log(`Workflow Run Name: ${run.data.name}`);
          console.log(`Workflow Run Status: ${run.data.status}`);
          console.log(`Workflow Run Conclusion: ${run.data.conclusion}`);

          if (run.data.status !== 'completed' || run.data.conclusion !== 'success') {
            console.error(`StatsigFFI run must be completed and successful before publishing Java SDK`);
            process.exit(1);
          }

    - name: Download Artifacts
      uses: dawidd6/action-download-artifact@v6
      with:
        workflow: statsig-ffi.yml
        run_id: ${{ github.event.inputs.workflow_run_id }}
        if_no_artifact_found: fail
        path: artifacts

    - name: List Artifacts
      run: |
        echo "Listing downloaded artifacts:"
        for artifact in artifacts/*; do
          if [ -d "$artifact" ]; then
            echo "Artifact: $(basename "$artifact")"
            du -sh "$artifact"
          fi
        done

    - name: Unzip and Move Release Artifacts
      if: steps.workflow_info.outputs.result == 'true'
      run: |
        echo "Moving necessary release files..."
        
        declare -A target_dirs=(
          ["statsig-ffi-x86_64-apple-darwin"]="macos-x86_64"
          ["statsig-ffi-aarch64-apple-darwin"]="macos-arm64"
          ["statsig-ffi-amazonlinux2-arm64"]="amazonlinux2-arm64"
          ["statsig-ffi-amazonlinux2-x86_64"]="amazonlinux2-x86_64"
          ["statsig-ffi-amazonlinux2023-arm64"]="amazonlinux2023-arm64"
          ["statsig-ffi-amazonlinux2023-x86_64"]="amazonlinux2023-x86_64"
          ["statsig-ffi-aarch64-pc-windows-msvc"]="windows-arm64"
          ["statsig-ffi-x86_64-pc-windows-msvc"]="windows-x86_64"
          ["statsig-ffi-i686-pc-windows-msvc"]="windows-i686"
        )
        
        for key in "${!target_dirs[@]}"; do
          src_path="artifacts/${key}/release"
          
          dest_dir="statsig-ffi/bindings/java/src/main/resources/native/${target_dirs[$key]}"
          
          mkdir -p "${dest_dir}"

          if [[ "$key" == *"apple-darwin"* ]]; then
            mv "${src_path}/libstatsig_ffi.dylib" "${dest_dir}/"
          elif [[ "$key" == *"windows"* ]]; then
            mv "${src_path}/libstatsig_ffi.dll" "${dest_dir}/"
          else
            mv "${src_path}/libstatsig_ffi.so" "${dest_dir}/"
          fi
        done

    - name: Publish to Maven
      run: |
        echo "Publishing the artifacts to Maven..."
        
        cd statsig-ffi/bindings/java
        
        ./gradlew publish