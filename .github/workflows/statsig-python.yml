# This file generated and copied from statsig-pyo3
# To update, see statsig-pyo3/.github/workflows/CI.yml

name: Statsig Python

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:
  release:
    types: [released, prereleased]

permissions:
  contents: read

jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        config:
          - target: amazonlinux2023-arm64
            platform: linux/arm64
            runner: statsig-ubuntu-arm64
            always_build: true

          - target: amazonlinux2023-x86_64
            platform: linux/amd64
            runner: ubuntu-latest

    runs-on: ${{ matrix.config.runner }}
    timeout-minutes: 15
    env:
      SHOULD_BUILD: ${{ github.ref_name == 'main' || matrix.config.always_build || github.event_name == 'release' }}
  
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 7.32.4

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2

      - name: Install CLI Dependencies
        run: cd cli && pnpm install

      - name: Build Docker Image
        if: ${{ env.SHOULD_BUILD == 'true' }}
        id: build-docker-image
        uses: ./.github/actions/build-docker-image
        with:
          dockerhub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          dockerhub_password: ${{ secrets.DOCKERHUB_TOKEN }}
          dockerfile_path: cli/src/docker/Dockerfile.${{ matrix.config.target }}
          docker_image_tag: statsig/core-sdk-compiler:${{ matrix.config.target }}
          gh_token: ${{ secrets.KONG_FINE_GRAINED_REPO_PAT }}
          platform: ${{ matrix.config.platform }}

      - name: Build for Release
        if: ${{ env.SHOULD_BUILD == 'true' }}
        shell: 'script --return --quiet --log-out /dev/null --command "bash -e {0}"'
        run: ./run py-build --target ${{ matrix.config.target }} --release --out dist --skip-docker-build

      - name: Upload wheels
        if: ${{ env.SHOULD_BUILD == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.config.target }}
          if-no-files-found: error
          path: statsig-pyo3/dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-13
            target: x86_64

          - runner: macos-14
            target: aarch64
          
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: statsig-pyo3
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          if-no-files-found: error
          path: statsig-pyo3/dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64

          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: statsig-pyo3
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
     
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          if-no-files-found: error
          path: statsig-pyo3/dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          working-directory: statsig-pyo3
          command: sdist
          args: --out dist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          if-no-files-found: error
          path: statsig-pyo3/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [linux, macos, windows, sdist]
    if: ${{ github.event_name == 'release' }}
    permissions:
      id-token: write
      contents: write
      attestations: write
    steps:
      - uses: actions/download-artifact@v4
      
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: 'wheels-*/*'
      
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.SIGTAT_PYPI_TEST_TOKEN }}
          MATURIN_REPOSITORY: testpypi
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*

