#!/bin/bash

set -e # Force Exit on Errors
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "$SCRIPT_DIR/../shared_constants"

TARGET=$1

echo -e "${BOLD_TXT}-- Identifying Machine --${NORMAL_TXT}"
$SCRIPT_DIR/../identify_machine


build_with_docker() {
  local docker_image=$1
  local build_target=$2

  echo -e "\n${BOLD_TXT}-- Building With $docker_image --${NORMAL_TXT}"
  docker run --rm -it -e COMMAND="cross build -p statsig_ffi --target $build_target" -v "$(pwd)":/app  $docker_image
}

build_with_cross() {
  local build_target=$1

  echo -e "\n${BOLD_TXT}-- Building With statsig/compiler-cross --${NORMAL_TXT}"
  docker run --rm -it \
    -e COMMAND="cross build -p statsig_ffi --target $build_target --features vendored_openssl" \
    -v "$(pwd)":/app \
    -v /var/run/docker.sock:/var/run/docker.sock \
    statsig/compiler-cross
}

case $TARGET in
  "x86_64-unknown-linux-gnu")
    build_with_cross "x86_64-unknown-linux-gnu"
    ;;
  
  "aarch64-unknown-linux-gnu")
    build_with_docker "statsig/compiler-aws" "aarch64-unknown-linux-gnu"
    ;;
  
  *)
    echo "Unexpected error: No matching target found for '$TARGET'"
    exit 1
    ;;
esac
