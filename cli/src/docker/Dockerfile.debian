FROM debian:10-slim

ARG PROTOC_ARCH=aarch_64
ARG ARM_SUFFIX=-arm

RUN apt-get update
RUN apt-get install -y \
    # Common Deps
    bash curl zsh default-jre jq pkg-config libssl-dev clang \
    # Python Deps
    python3 python3-pip \
    # PHP Deps
    php php-curl php-xml composer \
    # Profiling
    heaptrack valgrind

# Protoc Setup
RUN curl -LO https://github.com/protocolbuffers/protobuf/releases/download/v29.3/protoc-29.3-linux-${PROTOC_ARCH}.zip && \
    unzip protoc-29.3-linux-${PROTOC_ARCH}.zip -d /usr/local && \
    rm protoc-29.3-linux-${PROTOC_ARCH}.zip;

# Python Setup
RUN pip3 install --upgrade pip setuptools wheel
RUN pip3 install maturin patchelf pytest pytest_httpserver requests typing-extensions pytest-rerunfailures

# Node Setup
RUN curl -fsSL https://deb.nodesource.com/setup_18.x -o nodesource_setup.sh
RUN bash nodesource_setup.sh && apt-get install -y nodejs
RUN npm install -g pnpm@7.32.4 typescript@5.7.3

# Rust Setup
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"
ENV CARGO_TERM_COLOR=always
RUN rustup target add x86_64-unknown-linux-gnu aarch64-unknown-linux-gnu
RUN curl -LsSf https://get.nexte.st/latest/linux${ARM_SUFFIX} | tar zxf - -C ${CARGO_HOME:-~/.cargo}/bin;

# FlameGraph (Profiling)
RUN git clone https://github.com/brendangregg/FlameGraph.git /opt/FlameGraph
ENV PATH="/opt/FlameGraph:${PATH}"

ENV CC=clang

ENTRYPOINT ["sh", "-c"]
